@page "/event-details/{EventId:int}"

@inject AttendanceTrackerService AttendanceTracker

<PageTitle>Event Details</PageTitle>

<h1>Event Details</h1>

@if (eventDetails == null)
{
    <p><em>Loading event details...</em></p>
}
else
{
    <div class="event-details">
        <h2>@eventDetails.Name</h2>
        <p><strong>Date:</strong> @eventDetails.Date.ToString("MMMM dd, yyyy")</p>
        <p><strong>Location:</strong> @eventDetails.Location</p>
        <p><strong>Description:</strong> @eventDetails.Description</p>

        <h3>Participants (@AttendanceTracker.GetAttendanceCount(EventId))</h3>
        <ul>
            @foreach (var participant in AttendanceTracker.GetAttendance(EventId))
            {
                <li>@participant</li>
            }
        </ul>

        <NavLink class="btn btn-success" href="@($"/register/{eventDetails.Id}")">Register for Event</NavLink>
        <NavLink class="btn btn-primary" href="/">Back to Events</NavLink>
    </div>
}

@code {
    [Parameter]
    public int EventId { get; set; }

    private EventModel? eventDetails;

    protected override async Task OnInitializedAsync()
    {
        // Simulate fetching event details (replace with actual API call)
        await Task.Delay(1000);

        // Load event details based on EventId
        eventDetails = LoadEventDetails(EventId);
    }

    private EventModel? LoadEventDetails(int eventId)
    {
        // Replace this with actual data fetching logic
        var sampleEvents = new List<EventModel>
        {
            new EventModel { Id = 1, Name = "Tech Conference", Date = new DateTime(2025, 10, 12), Location = "New York", Description = "A conference about the latest in tech." },
            new EventModel { Id = 2, Name = "Art Exhibition", Date = new DateTime(2025, 11, 5), Location = "Los Angeles", Description = "An exhibition showcasing modern art." },
            new EventModel { Id = 3, Name = "Music Festival", Date = new DateTime(2025, 12, 20), Location = "Chicago", Description = "A festival featuring various music genres." },
        };

        return sampleEvents.FirstOrDefault(e => e.Id == eventId);
    }
}